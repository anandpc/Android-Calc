import androidx.compose.foundation.background
import androidx.compose.foundation.gestures.Orientation
import androidx.compose.foundation.gestures.scrollBy
import androidx.compose.foundation.horizontalScroll
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Text
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import kotlinx.coroutines.launch

@Composable
fun ScrollableRowWithSnapping() {
    val scrollState = rememberScrollState()
    val coroutineScope = rememberCoroutineScope()
    val itemWidth = 116.dp // 100.dp item size + 8.dp padding * 2
    val items = (1..10).toList()

    LaunchedEffect(scrollState.isScrollInProgress) {
        if (!scrollState.isScrollInProgress) {
            val firstVisibleItem = (scrollState.value / itemWidth.toPx()).toInt()
            val offset = scrollState.value % itemWidth.toPx()
            val target = if (offset < itemWidth.toPx() / 2) {
                firstVisibleItem * itemWidth.toPx()
            } else {
                (firstVisibleItem + 1) * itemWidth.toPx()
            }
            coroutineScope.launch {
                scrollState.animateScrollTo(target.toInt())
            }
        }
    }

    Row(
        modifier = Modifier
            .fillMaxWidth()
            .horizontalScroll(scrollState)
            .padding(16.dp)
    ) {
        for (item in items) {
            Box(
                modifier = Modifier
                    .size(100.dp)
                    .background(Color.Gray)
                    .padding(8.dp)
            ) {
                Text(
                    text = "Item $item",
                    color = Color.White,
                    style = MaterialTheme.typography.body1,
                    modifier = Modifier
                        .fillMaxSize()
                        .padding(16.dp)
                )
            }
            Spacer(modifier = Modifier.width(8.dp))
        }
    }
}

@Preview(showBackground = true)
@Composable
fun PreviewScrollableRowWithSnapping() {
    ScrollableRowWithSnapping()
}

fun Dp.toPx(): Float {
    return this.value * androidx.compose.ui.platform.LocalDensity.current.density
}